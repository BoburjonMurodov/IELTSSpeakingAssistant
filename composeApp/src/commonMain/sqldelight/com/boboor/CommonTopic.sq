-- import kotlinx.serialization.descriptors.PrimitiveKind.BOOLEAN;
--
--
-- CREATE TABLE commonTopic (
--     id TEXT NOT NULL PRIMARY KEY,
--     name TEXT NOT NULL,
--     active INTEGER AS BOOLEAN NOT NULL,
--     free INTEGER AS BOOLEAN NOT NULL,
--     "order" INTEGER NOT NULL,
--     isBookmarked INTEGER AS BOOLEAN NOT NULL DEFAULT 0,
--     progress INTEGER NOT NULL DEFAULT 0
-- );
--
-- CREATE TABLE commonQuestion (
--     id TEXT NOT NULL PRIMARY KEY,
--     topicId TEXT NOT NULL,
--     text TEXT NOT NULL,
--     isAnswered INTEGER AS BOOLEAN NOT NULL DEFAULT 0,
--     isMastered INTEGER AS BOOLEAN NOT NULL DEFAULT 0,
--     FOREIGN KEY (topicId) REFERENCES commonTopic(id)
-- );
--
-- CREATE TABLE commonVocabulary (
--     id TEXT NOT NULL PRIMARY KEY,
--     topicId TEXT NOT NULL,
--     text TEXT NOT NULL,
--     FOREIGN KEY (topicId) REFERENCES commonTopic(id)
-- );
--
--
-- getAllTopicsWithContent:
-- SELECT *
-- FROM commonTopic;
--
-- getTopicWithContent:
-- SELECT *
-- FROM commonTopic
-- WHERE id = ?;
--
-- getQuestionsForTopic:
-- SELECT *
-- FROM commonQuestion
-- WHERE topicId = ?;
--
-- getVocabularyForTopic:
-- SELECT *
-- FROM commonVocabulary
-- WHERE topicId = ?;
--
-- insertTopic:
-- INSERT OR REPLACE INTO commonTopic
-- VALUES ?;
--
-- insertQuestion:
-- INSERT OR REPLACE INTO commonQuestion
-- VALUES ?;
--
-- insertVocabulary:
-- INSERT OR REPLACE INTO commonVocabulary
-- VALUES ?;
--
-- updateTopic:
-- UPDATE commonTopic
-- SET name = ?, active = ?, free = ?, "order" = ?, isBookmarked = ?, progress = ?
-- WHERE id = ?;
--
-- updateQuestion:
-- UPDATE commonQuestion
-- SET text = ?, isAnswered = ?, isMastered = ?
-- WHERE id = ?;
--
-- clearTopics:
-- DELETE FROM commonTopic;